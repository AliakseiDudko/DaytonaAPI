swagger: '2.0'
info:
  version: '1.0'
  title: 'Daytona API'
  description: 'This is Daytona API'
  
schemes:
 - https
host: virtserver.swaggerhub.com
basePath: /AliakseiDudko/DaytonaAPI/1.0

paths:
  /users:
    post:
      summary: 'Creates a new user account'
      description: 'Creates a new user account'
      operationId: addUser
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - user
              - roleId
            properties:
              user:
                $ref: '#/definitions/user'
              roleId:
                type: integer
                format: int32
      responses:
        201:
          description: 'A new user account was succesfully created'
          schema:
            $ref: '#/definitions/user'
        400:
          $ref: '#/definitions/400StatusCode'
  /users/{userId}:
    get:
      summary: 'Gets a user account'
      description: 'Gets a single user account by ID'
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: 'Id of user to return'
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/user'

definitions:
  user:
    type: object
    required:
      - id
      - firstName
      - lastName
      - email
      - countryId
    properties:
      id:
        type: integer
        format: int32
      firstName:
        type: string
        example: 'John'
      lastName:
        type: string
        example: 'Doe'
      email:
        type: string
        format: email
        example: 'john.doe@daytona.com'
      bio:
        type: string
        example: 'John Doe''s bio'
      countryId:
        type: integer
        format: int32
      stateId:
        type: integer
        format: int32
      zip:
        type: string
      statusId:
        type: integer
        format: int32
      languageId:
        type: integer
        format: int32
      dateFormatId:
        type: integer
        format: int32
      timeZoneId:
        type: integer
        format: int32
      imagePath:
        type: string
  StatusCode400:
    description: 'Bad request'
    required:
      - message
    properties:
      message:
        type: string