swagger: '2.0'
info:
  version: '1.0'
  title: 'Daytona API'
  description: 'This is Daytona API'
paths:
  /users:
    post:
      summary: 'Creates a new user account'
      description: 'Creates a new user account'
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
                - roleId
              properties:
                user:
                  $ref: '#/components/schemas/user'
                roleId:
                  type: integer
      responses:
        '201':
          description: 'A new user account was succesfully created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          $ref: '#/components/responses/400StatusCode'
  /users/{userId}:
    get:
      summary: 'Gets a user account'
      description: 'Gets a single user account by ID'
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: 'Id of user to return'
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

components:
  schemas:
    user:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
        - countryId
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
          example: 'John'
        lastName:
          type: string
          example: 'Doe'
        email:
          type: string
          format: email
          example: 'john.doe@daytona.com'
        bio:
          type: string
          example: 'John Doe''s bio'
        countryId:
          type: integer
          format: int32
        stateId:
          type: integer
          format: int32
        zip:
          type: string
        statusId:
          type: integer
          format: int32
        languageId:
          type: integer
          format: int32
        dateFormatId:
          type: integer
          format: int32
        timeZoneId:
          type: integer
          format: int32
        imagePath:
          type: string
  responses:
    400StatusCode:
      description: 'Bad request'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
servers:
  - description: 'SwaggerHub API Auto Mocking'
    url: 'https://virtserver.swaggerhub.com/AliakseiDudko/DaytonaAPI/1.0'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /AliakseiDudko/DaytonaAPI/1.0
schemes:
 - https